# Generated by Django 3.0.1 on 2019-12-27 22:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Additive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure', models.CharField(choices=[('DW', 'Dry weight in grams'), ('DV', 'Dry volume in liters'), ('WV', 'Wet volume in liters')], default='DW', max_length=2)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AdditiveType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('num', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('created', models.DateTimeField(verbose_name='date created')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('measure', models.CharField(choices=[('DW', 'Dry weight in grams'), ('DV', 'Dry volume in liters'), ('WV', 'Wet volume in liters')], default='DW', max_length=2)),
                ('size', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Fermentable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('amount', models.FloatField()),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.Brand')),
            ],
        ),
        migrations.CreateModel(
            name='FermentableType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('measure', models.CharField(choices=[('DW', 'Dry weight in grams'), ('DV', 'Dry volume in liters'), ('WV', 'Wet volume in liters')], default='DW', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Fermentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateTimeField(auto_now_add=True, verbose_name='fermentation start')),
                ('enddate', models.DateTimeField(verbose_name='fermentation end')),
                ('start_specific_gravity', models.FloatField()),
                ('end_specific_gravity', models.FloatField()),
                ('start_ph', models.FloatField()),
                ('end_ph', models.FloatField()),
                ('start_ta', models.FloatField()),
                ('end_ta', models.FloatField()),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.Batch')),
            ],
        ),
        migrations.CreateModel(
            name='Yeast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('measure', models.CharField(choices=[('DW', 'Dry weight in grams'), ('DV', 'Dry volume in liters'), ('WV', 'Wet volume in liters')], default='DW', max_length=2)),
                ('amount', models.IntegerField()),
                ('yeastType', models.CharField(choices=[('DRY', 'Dry yeast'), ('WET', 'Wet yeast')], default='DRY', max_length=3)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.Brand')),
            ],
        ),
        migrations.CreateModel(
            name='YeastPacket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('expiration', models.DateTimeField(verbose_name='expiration date')),
                ('already_opened', models.BooleanField()),
                ('yeast', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.Yeast')),
            ],
        ),
        migrations.CreateModel(
            name='FermentationYeast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('fermentation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.Fermentation')),
                ('yeast', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.YeastPacket')),
            ],
        ),
        migrations.CreateModel(
            name='FermentationFermentable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('fermentable', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.Fermentable')),
                ('fermentation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.Fermentation')),
            ],
        ),
        migrations.CreateModel(
            name='FermentationAdditive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_time', models.DateTimeField()),
                ('amount', models.FloatField()),
                ('additive', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.Additive')),
                ('fermentation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.Fermentation')),
            ],
        ),
        migrations.CreateModel(
            name='FermentableBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchased', models.DateTimeField(verbose_name='date purchased')),
                ('fermentable', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.Fermentable')),
            ],
        ),
        migrations.AddField(
            model_name='fermentable',
            name='fermentable_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.FermentableType'),
        ),
        migrations.AddField(
            model_name='additive',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.Brand'),
        ),
        migrations.AddField(
            model_name='additive',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brews.AdditiveType'),
        ),
    ]
